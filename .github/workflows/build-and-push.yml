name: Build and Push Containers

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'eu-central-1' }}
  FRONTEND_IMAGE: ${{ vars.ECR_FRONTEND_REPO || 'oxygenquiz/frontend' }}
  BACKEND_IMAGE: ${{ vars.ECR_BACKEND_REPO || 'oxygenquiz/backend' }}
#   MICROSERVICE_IMAGE: ${{ vars.ECR_MICROSERVICE_REPO || 'oxygenquiz-microservice' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push frontend image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --file Dockerfile \
            --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.FRONTEND_IMAGE }}:${{ github.sha }} \
            --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.FRONTEND_IMAGE }}:latest \
            --push \
            .

      - name: Build and push backend image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --file OxygenBackend/Dockerfile \
            --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }} \
            --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.BACKEND_IMAGE }}:latest \
            --push \
            OxygenBackend

    # The microservice isn't ready to be built and pushed yet
    #   - name: Build and push microservice image
    #     run: |
    #       docker buildx build \
    #         --platform linux/amd64 \
    #         --file microservice/Dockerfile \
    #         --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.MICROSERVICE_IMAGE }}:${{ github.sha }} \
    #         --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.MICROSERVICE_IMAGE }}:latest \
    #         --push \
    #         microservice